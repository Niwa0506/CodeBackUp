(define TREE '(1 (2 (3 4)) 6 (7 8 9)) )


(define each-tree
   (lambda (f c e l)
     (cond ((null? l) e)         ; tree が空の時 (= 見つからなかった)
           ((pair? l)   (c
                        (map-tree f c e (car l))
                        (map-tree f c e (cdr l))
                        )
                        )
                         ; tree が部分木の時 (まだ値の比較はできない)
          (else         cons(f l); tree 葉の時 (ここで val と比較する)
                        )
    )))